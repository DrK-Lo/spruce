setwd("~/Desktop/AdaptreeData/spruce/covmats")
files <- read.table("../SpFileInfo.txt",header=TRUE)
filens<- paste(files$fileBaseName, ".bayenv.covmatED",sep="")
filens[1]<- "COMBINED.table.contig_flt10.bayenvED"  #will need to fix this later
pops <- read.table("../seqcap.bayenv.pop_order")
## Make heatmaps
for (i in 1:length(filens)){
npops <- length(scan(filens[i], nlines=1, skip=1))
covmat <- matrix(scan(filens[i]), ncol=npops, byrow=TRUE)
dim(covmat)
rownames(covmat)<-pops$V2
colnames(covmat)<-pops$V2
pdf(paste("pdfs/",filens[i],".pdf",sep=""),width=10, height=9, bg="white")
par(mar=c(4,4,4,7))
image(covmat, axes=FALSE, col=heat.colors(100))
every10 <- seq(1,npops,10)
axis(1,at=seq(0,1-1/npops, 1/(npops/10)),lab=as.character(pops$V2[every10]),
tick=FALSE, hadj=1, padj=0, line=0, las=2, cex=0.5)
axis(2,at=seq(0,1-1/npops, 1/(npops/10)),lab=as.character(pops$V2[every10]),
tick=FALSE, hadj=1, padj=0, line=0, las=2, cex=0.5)
mtext(as.character(filens[i]),side=3,outer=FALSE, line=2)
box()
image.plot(covmat, legend.only=TRUE,col=heat.colors(100))
dev.off()
}
library(fields)
source("http://bioconductor.org/biocLite. R")
biocLite("made4")
setwd("~/Desktop/AdaptreeData/spruce/covmats")
files <- read.table("../SpFileInfo.txt",header=TRUE)
filens<- paste(files$fileBaseName, ".bayenv.covmatED",sep="")
filens[1]<- "COMBINED.table.contig_flt10.bayenvED"  #will need to fix this later
i=9
pops <- read.table("../seqcap.bayenv.pop_order")
npops <- length(scan(filens[i], nlines=1, skip=1))
covmat <- matrix(scan(filens[i]), ncol=npops, byrow=TRUE)
dim(covmat)
rownames(covmat)<-pops$V2
colnames(covmat)<-pops$V2
pdf(paste("pdfs/",filens[i],".pdf",sep=""),width=10, height=9, bg="white")
par(mar=c(4,4,4,7))
image(covmat, axes=FALSE, col=heat.colors(100))
every10 <- seq(1,npops,10)
axis(1,at=seq(0,1-1/npops, 1/(npops/10)),lab=as.character(pops$V2[every10]),
tick=FALSE, hadj=1, padj=0, line=0, las=2, cex=0.5)
axis(2,at=seq(0,1-1/npops, 1/(npops/10)),lab=as.character(pops$V2[every10]),
tick=FALSE, hadj=1, padj=0, line=0, las=2, cex=0.5)
mtext(as.character(filens[i]),side=3,outer=FALSE, line=2)
box()
image.plot(covmat, legend.only=TRUE,col=heat.colors(100))
dev.off()
cor.table <- matrix(NA, nrow=length(filens), ncol=length(filens))
colnames(cor.table)=filens
rownames(cor.table)=filens
par(mar=c(4,4,1,1))
v1<- rep(NA, 64)
v2<- rep(NA, 64)
cor.out<- rep(NA, 64)
intercept.out<- rep(NA, 64)
slope.out<- rep(NA, 64)
k=0
i=9
extraPop <- read.table("../bayenv_gbs_extraPop.pop_order")
extraPop <- read.table("../bayenv_gbs_extraPop.pop_order", header=FALSE)
extraPop <- read.table("../bayenv_gbs_extraPop.pop_order", header=FALSE)
extraPop[1]
filens
i=9
covmat_gbs <- matrix(scan(filens[i]), ncol=254, byrow=TRUE)
covmat_i <- covmat_gbs[-extraPop[1],-extraPop[1]]
xtraPop <- as.numeric(extraPop[1])
xtraPop
covmat_i <- covmat_gbs[-xtraPop,-xtraPop]
covmat_i
dim(covmat(i))
dim(covmat_i
)
for (i in 1:9){
if (i<9){
covmat_i <- matrix(scan(filens[i]), ncol=253, byrow=TRUE)
}if (i==9){
covmat_gbs <- matrix(scan(filens[i]), ncol=254, byrow=TRUE)
# remove the extra population from GBS
covmat_i <- covmat_gbs[-xtraPop,-xtraPop]
}
for (j in 1:9){
k=k+1
v1[k]<-filens[i]
v2[k]<-filens[j]
if (j<9){
covmat_j <- matrix(scan(filens[j]), ncol=253, byrow=TRUE)
}if (j==9){
covmat_gbs <- matrix(scan(filens[j]), ncol=254, byrow=TRUE)
# remove the extra population from GBS
covmat_j <- covmat_gbs[-xtraPop,-xtraPop]
}
c_out <- cor.test(covmat_i, covmat_j, method="pearson")
cor.table[i,j]<-c_out$est
cor.out[k]<-c_out$est
if(i!=j){
m<-lm(as.numeric(covmat_j)~as.numeric(covmat_i))
intercept.out[k]<-m$coef[1]
slope.out[k]<-m$coef[2]
jpeg(paste("pdfs/regressions/",filens[i],"_VS_",filens[j],".jpeg", sep=""),width=1000,height=800)
plot(covmat_i,covmat_j, xlim=c(0.4,0.6), ylim=c(0.4,0.6), xlab=filens[i],
ylab=filens[j], bty="l")
abline(m, col="red", lwd=2)
abline(0,1, lwd=5)
dev.off()
}
}
}
k=0
for (i in 1:9){
if (i<9){
covmat_i <- matrix(scan(filens[i]), ncol=253, byrow=TRUE)
}
if (i==9){
covmat_gbs <- matrix(scan(filens[i]), ncol=254, byrow=TRUE)
# remove the extra population from GBS
covmat_i <- covmat_gbs[-xtraPop,-xtraPop]
}
for (j in 1:9){
k=k+1
v1[k]<-filens[i]
v2[k]<-filens[j]
if (j<9){
covmat_j <- matrix(scan(filens[j]), ncol=253, byrow=TRUE)
}
if (j==9){
covmat_gbs <- matrix(scan(filens[j]), ncol=254, byrow=TRUE)
# remove the extra population from GBS
covmat_j <- covmat_gbs[-xtraPop,-xtraPop]
}
c_out <- cor.test(covmat_i, covmat_j, method="pearson")
cor.table[i,j]<-c_out$est
cor.out[k]<-c_out$est
if(i!=j){
m<-lm(as.numeric(covmat_j)~as.numeric(covmat_i))
intercept.out[k]<-m$coef[1]
slope.out[k]<-m$coef[2]
jpeg(paste("pdfs/regressions/",filens[i],"_VS_",filens[j],".jpeg", sep=""),width=1000,height=800)
plot(covmat_i,covmat_j, xlim=c(0.4,0.6), ylim=c(0.4,0.6), xlab=filens[i],
ylab=filens[j], bty="l")
abline(m, col="red", lwd=2)
abline(0,1, lwd=5)
dev.off()
}
}
}
out<- data.frame(v1x=v1,v2y=v2, cor.out, intercept.out, slope.out)
write.csv(out, file="CompareCovMatsResults.csv")
cor.table
write.csv(cor.table, file="CorTable.csv")
setwd("~/Desktop/AdaptreeData/spruce/covmats")
files <- read.table("../SpFileInfo.txt",header=TRUE)
filens<- paste(files$fileBaseName, ".bayenv.covmatED",sep="")
filens[1]<- "COMBINED.table.contig_flt10.bayenvED"  #will need to fix this later
files
string_i<-files[i,2:5]
string_i
cor.table <- matrix(NA, nrow=length(filens), ncol=length(filens))
colnames(cor.table)=filens
rownames(cor.table)=filens
slope.table <- cor.table
par(mar=c(4,4,1,1))
v1<- rep(NA, length(filens)^2)
v2<- rep(NA, length(filens)^2)
cor.out<- rep(NA, length(filens)^2)
intercept.out<- rep(NA, length(filens)^2)
slope.out<- rep(NA, length(filens)^2)
i.info <- matrix(NA, nrow=length(filens)^2, ncol=4)
j.info <- matrix(NA, nrow=length(filens)^2, ncol=4)
### Need to edit covariance matrix from GBS ###
extraPop <- read.table("../bayenv_gbs_extraPop.pop_order", header=FALSE)
xtraPop <- as.numeric(extraPop[1])
k=0
for (i in 1:9){
if (i<9){
covmat_i <- matrix(scan(filens[i]), ncol=253, byrow=TRUE)
}
if (i==9){
covmat_gbs <- matrix(scan(filens[i]), ncol=254, byrow=TRUE)
# remove the extra population from GBS
covmat_i <- covmat_gbs[-xtraPop,-xtraPop]
}
for (j in 1:9){
i.info[k,]<-files[i,2:5]
j.info[k,]<-files[j,2:5]
k=k+1
v1[k]<-filens[i]
v2[k]<-filens[j]
if (j<9){
covmat_j <- matrix(scan(filens[j]), ncol=253, byrow=TRUE)
}
if (j==9){
covmat_gbs <- matrix(scan(filens[j]), ncol=254, byrow=TRUE)
# remove the extra population from GBS
covmat_j <- covmat_gbs[-xtraPop,-xtraPop]
}
c_out <- cor.test(covmat_i, covmat_j, method="pearson")
cor.table[i,j]<-c_out$est
cor.out[k]<-c_out$est
if(i!=j){
m<-lm(as.numeric(covmat_j)~as.numeric(covmat_i))
intercept.out[k]<-m$coef[1]
slope.out[k]<-m$coef[2]
slope.table[i,j]<-m$coef[2]
jpeg(paste("pdfs/regressions/",filens[i],"_VS_",filens[j],".jpeg", sep=""),width=1000,height=800)
plot(covmat_i,covmat_j, xlim=c(0.4,0.6), ylim=c(0.4,0.6), xlab=filens[i],
ylab=filens[j], bty="l")
abline(m, col="red", lwd=2)
abline(0,1, lwd=5)
dev.off()
}
}
}
colnames(i.info)<- paste("i",colnames(i.info))
out<- data.frame(v1x=v1,v2y=v2, cor.out, intercept.out, slope.out)
write.csv(out, file="CompareCovMatsResults.csv")
cor.table2<- cbind(files[,2:5], cor.table)
slope.table2<- cbind(files[,2:5], slope.table)
write.csv(cor.table, file="CorTable.csv")
write.csv(slope.table, file="SlopeTable.csv")
head(i.info)
files[i,2:5]
k
i.info <- matrix(NA, nrow=length(filens)^2, ncol=4)
i.info
i.info <- data.frame()
i.info[k,]<-files[i,2:5]
i.info <- data.frame(ncol=4)
i.info[k,]<-files[i,2:5]
i.info[k,]<-as.character(files[i,2:5])
i.info <- matrix(NA, nrow=length(filens)^2, ncol=4)
i.info[k,]<-as.character(files[i,2:5])
head(i.info)
as.character(files[i,2:5])
files[i,2:5]
nx<-rep(NA, length(filens)^2)
i.info <- data.frame(MinimumData=nx, Imputation=nx, SNPs=nx, Ascertainment=nx)
i.info[k,]<-files[i,2:5]
head(i.info)
files[i,2:5]
i.info[k,]<-files[i,2:5]
head(i.info)
as.character(files[i,2:5])
?factor
i.info[k,]<-character(files[i,2:5])
character(files[i,2:5])
unclass(files[i,2:5])
i.info[k,]<-unlist(files[i,2:5])
unlist(files[i,2:5])
head(i.info)
cor.table <- matrix(NA, nrow=length(filens), ncol=length(filens))
colnames(cor.table)=filens
rownames(cor.table)=filens
slope.table <- cor.table
par(mar=c(4,4,1,1))
nx<-rep(NA, length(filens)^2)
v1<- nx
v2<- nx
cor.out<- nx
intercept.out<- nx
slope.out<- nx
i.info <- data.frame(MinimumData=nx, Imputation=nx, SNPs=nx, Ascertainment=nx)
j.info <- data.frame(MinimumData=nx, Imputation=nx, SNPs=nx, Ascertainment=nx)
### Need to edit covariance matrix from GBS ###
extraPop <- read.table("../bayenv_gbs_extraPop.pop_order", header=FALSE)
xtraPop <- as.numeric(extraPop[1])
k=0
for (i in 1:9){
if (i<9){
covmat_i <- matrix(scan(filens[i]), ncol=253, byrow=TRUE)
}
if (i==9){
covmat_gbs <- matrix(scan(filens[i]), ncol=254, byrow=TRUE)
# remove the extra population from GBS
covmat_i <- covmat_gbs[-xtraPop,-xtraPop]
}
for (j in 1:9){
i.info[k,]<-unlist(files[i,2:5])
j.info[k,]<-unlist(files[j,2:5])
k=k+1
v1[k]<-filens[i]
v2[k]<-filens[j]
if (j<9){
covmat_j <- matrix(scan(filens[j]), ncol=253, byrow=TRUE)
}
if (j==9){
covmat_gbs <- matrix(scan(filens[j]), ncol=254, byrow=TRUE)
# remove the extra population from GBS
covmat_j <- covmat_gbs[-xtraPop,-xtraPop]
}
c_out <- cor.test(covmat_i, covmat_j, method="pearson")
cor.table[i,j]<-c_out$est
cor.out[k]<-c_out$est
if(i!=j){
m<-lm(as.numeric(covmat_j)~as.numeric(covmat_i))
intercept.out[k]<-m$coef[1]
slope.out[k]<-m$coef[2]
slope.table[i,j]<-m$coef[2]
jpeg(paste("pdfs/regressions/",filens[i],"_VS_",filens[j],".jpeg", sep=""),width=1000,height=800)
plot(covmat_i,covmat_j, xlim=c(0.4,0.6), ylim=c(0.4,0.6), xlab=filens[i],
ylab=filens[j], bty="l")
abline(m, col="red", lwd=2)
abline(0,1, lwd=5)
dev.off()
}
}
}
colnames(i.info)<- paste("i",colnames(i.info))
colnames(i.info)
colnames(i.info)<- paste("i_",colnames(i.info))
colnames(j.info)<- paste("j_",colnames(j.info))
out<- data.frame(v1x=v1,v2y=v2, cor.out, intercept.out, slope.out)
write.csv(out, file="CompareCovMatsResults.csv")
cor.table2<- data.frame(files$MinimumData,files$Imputation,files$SNPs,
files$Ascertainment, files$fileBaseName, cor.table)
head(cor.table2)
slope.table2<- data.frame(files$MinimumData,files$Imputation,files$SNPs,
files$Ascertainment, files$fileBaseName, slope.table)
write.csv(cor.table, file="CorTable.csv")
write.csv(slope.table, file="SlopeTable.csv")
write.csv(cor.table2, file="CorTable.csv")
write.csv(slope.table2, file="SlopeTable.csv")
out<- data.frame(i.info, j.info, v1x=v1,v2y=v2, cor.out, intercept.out, slope.out)
write.csv(out, file="CompareCovMatsResults.csv")
head(i.info)
head(i.info,10)
write.csv(out, file="CompareCovMatsResults.csv")
i=1
j=1
i.info[k,]<-unlist(files[i,2:5])
j.info[k,]<-unlist(files[j,2:5])
head(i.info)
head(j.info)
i.info <- data.frame(MinimumData=nx, Imputation=nx, SNPs=nx, Ascertainment=nx)
j.info <- data.frame(MinimumData=nx, Imputation=nx, SNPs=nx, Ascertainment=nx)
k=1
i.info[k,]<-unlist(files[i,2:5])
j.info[k,]<-unlist(files[j,2:5])
i.info
head(i.info)
head(j.info)
cor.table <- matrix(NA, nrow=length(filens), ncol=length(filens))
colnames(cor.table)=filens
rownames(cor.table)=filens
slope.table <- cor.table
par(mar=c(4,4,1,1))
nx<-rep(NA, length(filens)^2)
v1<- nx
v2<- nx
cor.out<- nx
intercept.out<- nx
slope.out<- nx
i.info <- data.frame(MinimumData=nx, Imputation=nx, SNPs=nx, Ascertainment=nx)
j.info <- data.frame(MinimumData=nx, Imputation=nx, SNPs=nx, Ascertainment=nx)
### Need to edit covariance matrix from GBS ###
extraPop <- read.table("../bayenv_gbs_extraPop.pop_order", header=FALSE)
xtraPop <- as.numeric(extraPop[1])
k=0
for (i in 1:9){
if (i<9){
covmat_i <- matrix(scan(filens[i]), ncol=253, byrow=TRUE)
}
if (i==9){
covmat_gbs <- matrix(scan(filens[i]), ncol=254, byrow=TRUE)
# remove the extra population from GBS
covmat_i <- covmat_gbs[-xtraPop,-xtraPop]
}
for (j in 1:9){
i.info[k,]<-unlist(files[i,2:5])
j.info[k,]<-unlist(files[j,2:5])
k=k+1
v1[k]<-filens[i]
v2[k]<-filens[j]
if (j<9){
covmat_j <- matrix(scan(filens[j]), ncol=253, byrow=TRUE)
}
if (j==9){
covmat_gbs <- matrix(scan(filens[j]), ncol=254, byrow=TRUE)
# remove the extra population from GBS
covmat_j <- covmat_gbs[-xtraPop,-xtraPop]
}
c_out <- cor.test(covmat_i, covmat_j, method="pearson")
cor.table[i,j]<-c_out$est
cor.out[k]<-c_out$est
if(i!=j){
m<-lm(as.numeric(covmat_j)~as.numeric(covmat_i))
intercept.out[k]<-m$coef[1]
slope.out[k]<-m$coef[2]
slope.table[i,j]<-m$coef[2]
jpeg(paste("pdfs/regressions/",filens[i],"_VS_",filens[j],".jpeg", sep=""),width=1000,height=800)
plot(covmat_i,covmat_j, xlim=c(0.4,0.6), ylim=c(0.4,0.6), xlab=filens[i],
ylab=filens[j], bty="l")
abline(m, col="red", lwd=2)
abline(0,1, lwd=5)
dev.off()
}
}
}
colnames(i.info)<- paste("i_",colnames(i.info))
colnames(j.info)<- paste("j_",colnames(j.info))
out<- data.frame(i.info, j.info, v1x=v1,v2y=v2, cor.out, intercept.out, slope.out)
write.csv(out, file="CompareCovMatsResults.csv")
head(i.info)
head(j.info)
k=0
for (i in 1:9){
for (j in 1:9){
k=k+1
i.info[k,]<-unlist(files[i,2:5])
j.info[k,]<-unlist(files[j,2:5])
}}
colnames(i.info)<- paste("i_",colnames(i.info))
colnames(j.info)<- paste("j_",colnames(j.info))
out<- data.frame(i.info, j.info, v1x=v1,v2y=v2, cor.out, intercept.out, slope.out)
write.csv(out, file="CompareCovMatsResults.csv")
f1 <- read.table("/Users/katie/Desktop/Rproj-GEAs3/bayenvFilesResults/1R_R90_1351142970_988_5_NumPops=90_NumInd=20.COVMATED")
hist(f1)
f1 <- read.table("/Users/katie/Desktop/Rproj-GEAs3/bayenvFilesResults/1R_R90_1351142970_988_5_NumPops=90_NumInd=20.COVMATED", what=numeric)
f1 <- read.table("/Users/katie/Desktop/Rproj-GEAs3/bayenvFilesResults/1R_R90_1351142970_988_5_NumPops=90_NumInd=20.COVMATED",colClasses=numeric)
f1 <- read.table("/Users/katie/Desktop/Rproj-GEAs3/bayenvFilesResults/1R_R90_1351142970_988_5_NumPops=90_NumInd=20.COVMATED",colClasses="numeric")
hist(f1)
f1 <- scan("/Users/katie/Desktop/Rproj-GEAs3/bayenvFilesResults/1R_R90_1351142970_988_5_NumPops=90_NumInd=20.COVMATED")
hist(f1)
quartz()
hist(f1)
hist(f1R, main="1R", xlab="Covariance")
f1R <- scan("/Users/katie/Desktop/Rproj-GEAs3/bayenvFilesResults/1R_R90_1351142970_988_5_NumPops=90_NumInd=20.COVMATED")
hist(f1R, main="1R", xlab="Covariance")
f2R <- scan("/Users/katie/Desktop/Rproj-GEAs3/bayenvFilesResults/2R_R90_1351142970_988_5_NumPops=90_NumInd=20.COVMATED")
f2R <- scan("/Users/katie/Desktop/Rproj-GEAs3/bayenvFilesResults/2R_R90_1351142970_988_6_NumPops=90_NumInd=20.COVMATED")
hist(f1R, main="1R", xlab="Covariance")
quartz()
hist(f2R, main="1R", xlab="Covariance")
hist(f2R, main="2R", xlab="Covariance", xlim=c(0.05,0.2))
hist(f1R, main="1R", xlab="Covariance", xlim=c(0.05,0.2))
hist(f2R, main="2R", xlab="Covariance", xlim=c(0.05,0.2))
fIBD <- scan("/Users/katie/Desktop/Rproj-GEAs3/bayenvFilesResults/IBD_R90_1351142970_988_6_NumPops=90_NumInd=20.COVMATED")
fIBD <- scan("/Users/katie/Desktop/Rproj-GEAs3/bayenvFilesResults/IBD_R90_1351142970_988_7_NumPops=90_NumInd=20.COVMATED")
fIM <- scan("/Users/katie/Desktop/Rproj-GEAs3/bayenvFilesResults/IM_R90_1351142970_988_8_NumPops=90_NumInd=20.COVMATED")
hist(fIM, main="IM", xlab="Covariance", xlim=c(0.05,0.2))
quartz()
par(mfrow=c(4,1), mar=c(1,3,3,1), oma=c(1,1,1,1))
hist(fIM, main="IM", xlab="Covariance", xlim=c(0.05,0.2))
hist(fIBD, main="IBD", xlab="Covariance", xlim=c(0.05,0.2))
hist(f1R, main="1R", xlab="Covariance", xlim=c(0.05,0.2))
hist(f2R, main="2R", xlab="Covariance", xlim=c(0.05,0.2))
par(mfrow=c(4,1), mar=c(1,3,3,1), oma=c(4,1,1,1))
hist(fIM, main="IM", xlab="Covariance", xlim=c(0.05,0.2))
hist(fIBD, main="IBD", xlab="Covariance", xlim=c(0.05,0.2))
hist(f1R, main="1R", xlab="Covariance", xlim=c(0.05,0.2))
hist(f2R, main="2R", xlab="Covariance", xlim=c(0.05,0.2))
par(mfrow=c(4,1), mar=c(1,3,3,1), oma=c(4,4,1,1))
hist(fIM, main="IM", xlab="Covariance", xlim=c(0.05,0.2))
hist(fIBD, main="IBD", xlab="Covariance", xlim=c(0.05,0.2))
hist(f1R, main="1R", xlab="Covariance", xlim=c(0.05,0.2))
hist(f2R, main="2R", xlab="Covariance", xlim=c(0.05,0.2))
mtext("Covariance", 1, outer=TRUE)
mtext("Covariance", 1, outer=TRUE, line=2)
mtext("Count", 2, outer=TRUE, line=2)
mtext("Count", 2, outer=TRUE, line=1)
mtext("Count", 2, outer=TRUE, line=0)
hist(fIM, main="IM", xlab="Covariance", xlim=c(0.05,0.2))
hist(fIBD, main="IBD", xlab="Covariance", xlim=c(0.05,0.2))
hist(f1R, main="1R", xlab="Covariance", xlim=c(0.05,0.2))
hist(f2R, main="2R", xlab="Covariance", xlim=c(0.05,0.2))
mtext("Covariance", 1, outer=TRUE, line=2)
mtext("Count", 2, outer=TRUE, line=0)
quartz()
par(mfrow=c(4,1), mar=c(3,3,3,1), oma=c(4,4,1,1))
hist(fIM, main="IM", xlab="Covariance", xlim=c(0.05,0.2))
hist(fIBD, main="IBD", xlab="Covariance", xlim=c(0.05,0.2))
hist(f1R, main="1R", xlab="Covariance", xlim=c(0.05,0.2))
hist(f2R, main="2R", xlab="Covariance", xlim=c(0.05,0.2))
mtext("Covariance", 1, outer=TRUE, line=2)
mtext("Count", 2, outer=TRUE, line=0)
par(mfrow=c(4,1), mar=c(4,3,3,1), oma=c(3,3,1,1))
hist(fIM, main="IM", xlab="Covariance", xlim=c(0.05,0.2))
hist(fIBD, main="IBD", xlab="Covariance", xlim=c(0.05,0.2))
hist(f1R, main="1R", xlab="Covariance", xlim=c(0.05,0.2))
hist(f2R, main="2R", xlab="Covariance", xlim=c(0.05,0.2))
mtext("Covariance", 1, outer=TRUE, line=1)
mtext("Count", 2, outer=TRUE, line=0)
par(mfrow=c(4,1), mar=c(3,3,3,1), oma=c(3,3,1,1))
hist(fIM, main="IM", xlab="Covariance", xlim=c(0.05,0.2))
hist(fIBD, main="IBD", xlab="Covariance", xlim=c(0.05,0.2))
hist(f1R, main="1R", xlab="Covariance", xlim=c(0.05,0.2))
hist(f2R, main="2R", xlab="Covariance", xlim=c(0.05,0.2))
mtext("Covariance", 1, outer=TRUE, line=1)
mtext("Count", 2, outer=TRUE, line=0)
